[gd_scene load_steps=11 format=2]

[ext_resource path="res://cube.obj" type="ArrayMesh" id=1]

[sub_resource type="Shader" id=1]
code = "main()
{
	
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="PlaneMesh" id=3]
subdivide_width = 32
subdivide_depth = 32

[sub_resource type="Shader" id=4]
code = "shader_type spatial;

uniform float height_scale = 0.5;
uniform sampler2D noise;
uniform sampler2D normalmap;

varying vec2 vertex_position;

void vertex() {
  vertex_position = VERTEX.xz / 2.0;
  float height = texture(noise, vertex_position).x * height_scale;
  VERTEX.y += height * height_scale;
}

void fragment() {
  NORMALMAP = texture(normalmap, vertex_position).xyz;
}"

[sub_resource type="OpenSimplexNoise" id=5]
seed = 1

[sub_resource type="NoiseTexture" id=6]
noise = SubResource( 5 )

[sub_resource type="OpenSimplexNoise" id=7]

[sub_resource type="NoiseTexture" id=8]
noise = SubResource( 7 )

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 4 )
shader_param/height_scale = 0.5
shader_param/noise = SubResource( 6 )
shader_param/normalmap = SubResource( 8 )

[node name="Spatial" type="Spatial"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.0344448, 0 )

[node name="cube" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.83169, -5.93247, -2.02059 )
mesh = ExtResource( 1 )
material/0 = SubResource( 2 )

[node name="MeshInstance" type="MeshInstance" parent="."]
mesh = SubResource( 3 )
material/0 = SubResource( 9 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.628542, -0.777776, 0.000514059, 0.758409, 0.613038, 0.22136, -0.172484, -0.138744, 0.975192, 0.380885, 1.31038, 2.43261 )
